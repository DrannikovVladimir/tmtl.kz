// bot/utils/analytics.js

const fs = require('fs');
const path = require('path');

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
 */
class Analytics {
  constructor() {
    this.dataDir = path.join(__dirname, '..', '..', 'data');
    this.downloadsFile = path.join(this.dataDir, 'downloads.json');
    this.callbackRequestsFile = path.join(this.dataDir, 'callback-requests.json');
    this.userInteractionsFile = path.join(this.dataDir, 'user-interactions.json');
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    this.ensureDataDir();
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
   */
  ensureDataDir() {
    if (!fs.existsSync(this.dataDir)) {
      fs.mkdirSync(this.dataDir, { recursive: true });
      console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', this.dataDir);
    }
  }

  /**
   * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–∞
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
   */
  recordDownload(data) {
    try {
      const downloads = this.readJsonFile(this.downloadsFile) || [];
      
      const downloadRecord = {
        id: this.generateId(),
        ...data,
        timestamp: new Date().toISOString()
      };
      
      downloads.push(downloadRecord);
      this.writeJsonFile(this.downloadsFile, downloads);
      
      console.log('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', error);
    }
  }

  /**
   * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
   */
  recordCallbackRequest(data) {
    try {
      const requests = this.readJsonFile(this.callbackRequestsFile) || [];
      
      const requestRecord = {
        id: this.generateId(),
        ...data,
        status: 'new',
        timestamp: new Date().toISOString()
      };
      
      requests.push(requestRecord);
      this.writeJsonFile(this.callbackRequestsFile, requests);
      
      console.log('üìû –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –∑–∞–ø–∏—Å–∞–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–≤–æ–Ω–æ–∫:', error);
    }
  }

  /**
   * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
   */
  recordUserInteraction(data) {
    try {
      const interactions = this.readJsonFile(this.userInteractionsFile) || [];
      
      const interactionRecord = {
        id: this.generateId(),
        ...data,
        timestamp: new Date().toISOString()
      };
      
      interactions.push(interactionRecord);
      this.writeJsonFile(this.userInteractionsFile, interactions);
      
      console.log('üë§ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø–∏—Å–∞–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
   * @param {Number} days - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)
   * @returns {Object} - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
   */
  getDownloadStats(days = 30) {
    try {
      const downloads = this.readJsonFile(this.downloadsFile) || [];
      const cutoffDate = new Date();
      cutoffDate.setDate(cutoffDate.getDate() - days);

      const recentDownloads = downloads.filter(download => 
        new Date(download.timestamp) > cutoffDate
      );

      return {
        totalDownloads: downloads.length,
        recentDownloads: recentDownloads.length,
        downloads: downloads,
        period: `${days} –¥–Ω–µ–π`,
        averagePerDay: (recentDownloads.length / days).toFixed(2)
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π:', error);
      return {
        totalDownloads: 0,
        recentDownloads: 0,
        downloads: [],
        error: error.message
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫
   * @param {Number} days - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
   * @returns {Object} - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫
   */
  getCallbackStats(days = 30) {
    try {
      const requests = this.readJsonFile(this.callbackRequestsFile) || [];
      const cutoffDate = new Date();
      cutoffDate.setDate(cutoffDate.getDate() - days);

      const recentRequests = requests.filter(request => 
        new Date(request.timestamp) > cutoffDate
      );

      const byStatus = requests.reduce((acc, request) => {
        acc[request.status] = (acc[request.status] || 0) + 1;
        return acc;
      }, {});

      return {
        totalRequests: requests.length,
        recentRequests: recentRequests.length,
        byStatus,
        requests: requests,
        period: `${days} –¥–Ω–µ–π`
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞—è–≤–æ–∫:', error);
      return {
        totalRequests: 0,
        recentRequests: 0,
        byStatus: {},
        requests: [],
        error: error.message
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
   * @returns {Object} - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
   */
  getGeneralStats() {
    try {
      const downloads = this.getDownloadStats();
      const callbacks = this.getCallbackStats();
      const interactions = this.readJsonFile(this.userInteractionsFile) || [];

      // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
      const allUsers = new Set();
      downloads.downloads.forEach(d => allUsers.add(d.userId));
      callbacks.requests.forEach(r => allUsers.add(r.userId));
      interactions.forEach(i => allUsers.add(i.userId));

      return {
        totalUsers: allUsers.size,
        totalDownloads: downloads.totalDownloads,
        totalCallbacks: callbacks.totalRequests,
        totalInteractions: interactions.length,
        conversionRate: allUsers.size > 0 ? 
          ((callbacks.totalRequests / allUsers.size) * 100).toFixed(2) + '%' : '0%',
        lastUpdated: new Date().toISOString()
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      return {
        error: error.message
      };
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫
   * @param {String} requestId - ID –∑–∞—è–≤–∫–∏
   * @param {String} newStatus - –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
   */
  updateCallbackStatus(requestId, newStatus) {
    try {
      const requests = this.readJsonFile(this.callbackRequestsFile) || [];
      const requestIndex = requests.findIndex(r => r.id === requestId);
      
      if (requestIndex !== -1) {
        requests[requestIndex].status = newStatus;
        requests[requestIndex].updatedAt = new Date().toISOString();
        
        this.writeJsonFile(this.callbackRequestsFile, requests);
        console.log(`üìû –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ ${requestId} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: ${newStatus}`);
        return true;
      }
      
      return false;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏:', error);
      return false;
    }
  }

  /**
   * –ß–∏—Ç–∞–µ—Ç JSON —Ñ–∞–π–ª
   * @param {String} filePath - –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
   * @returns {Array|Object|null} - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
   */
  readJsonFile(filePath) {
    try {
      if (!fs.existsSync(filePath)) {
        return null;
      }
      const data = fs.readFileSync(filePath, 'utf8');
      return JSON.parse(data);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${filePath}:`, error);
      return null;
    }
  }

  /**
   * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
   * @param {String} filePath - –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
   * @param {Array|Object} data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
   */
  writeJsonFile(filePath, data) {
    try {
      this.ensureDataDir();
      fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error);
      throw error;
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
   * @returns {String} - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
   */
  generateId() {
    return Date.now().toString(36) + Math.random().toString(36).substr(2);
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
   * @returns {Object} - –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
   */
  exportAllData() {
    try {
      return {
        downloads: this.readJsonFile(this.downloadsFile) || [],
        callbackRequests: this.readJsonFile(this.callbackRequestsFile) || [],
        userInteractions: this.readJsonFile(this.userInteractionsFile) || [],
        exportedAt: new Date().toISOString()
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö:', error);
      return { error: error.message };
    }
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º
const analytics = new Analytics();

module.exports = analytics;