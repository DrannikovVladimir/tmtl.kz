// bot/services/notificationService.js

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
 */
class NotificationService {
  constructor() {
    this.adminChatId = process.env.ADMIN_TELEGRAM_ID || '6027098142';
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫
   * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
   */
  async sendCallbackNotification(bot, data) {
    try {
      const date = new Date(data.requestedAt);
      const timeString = date.toLocaleString('ru-RU', {
        timeZone: 'Asia/Almaty',
        day: '2-digit',
        month: '2-digit', 
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML —Å–∏–º–≤–æ–ª—ã
      const escapeHtml = (text) => {
        if (!text) return '';
        return text.toString()
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      };

      // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ HTML —Ä–∞–∑–º–µ—Ç–∫–∏
      const notificationMessage = `
üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫!

üë§ –ö–ª–∏–µ–Ω—Ç: ${escapeHtml(data.firstName)} ${escapeHtml(data.lastName || '')}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phoneNumber}
üë§ Username: ${data.userName ? '@' + data.userName : '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üÜî ID: ${data.userId}
üïê –í—Ä–µ–º—è: ${timeString}

üí° –î–µ–π—Å—Ç–≤–∏—è:
‚Ä¢ –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É
‚Ä¢ –£—Ç–æ—á–Ω–∏—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç—É—Ä—ã
      `;

      await bot.sendMessage(this.adminChatId, notificationMessage);
      
      console.log(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', error);
      console.log('üìù –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:', JSON.stringify(data, null, 2));
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–∞
   * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @param {Object} data - –¥–∞–Ω–Ω—ã–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
   */
  async sendDownloadNotification(bot, data) {
    try {
      const date = new Date(data.downloadedAt);
      const timeString = date.toLocaleString('ru-RU', {
        timeZone: 'Asia/Almaty',
        day: '2-digit',
        month: '2-digit', 
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      const notificationMessage = `
üìñ <b>–°–∫–∞—á–∞–Ω –ª–∏–¥-–º–∞–≥–Ω–∏—Ç!</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> ${data.userName}
üÜî <b>ID:</b> <code>${data.userId}</code>
üïê <b>–í—Ä–µ–º—è:</b> ${timeString}
üì± <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> ${data.source}

üìä <b>–ù–æ–≤—ã–π –ª–∏–¥ –≤ –≤–æ—Ä–æ–Ω–∫–µ –ø—Ä–æ–¥–∞–∂!</b>
      `;

      await bot.sendMessage(this.adminChatId, notificationMessage, {
        parse_mode: 'HTML'
      });
      
      console.log(`üìä –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏:', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
   * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @param {String} message - —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Object} options - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   */
  async sendGeneralNotification(bot, message, options = {}) {
    try {
      await bot.sendMessage(this.adminChatId, message, {
        parse_mode: 'HTML',
        ...options
      });
      
      console.log(`üì¢ –û–±—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω —á–∞—Ç–∞
   * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @returns {Boolean} - –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
   */
  async checkAdminAvailability(bot) {
    try {
      await bot.sendChatAction(this.adminChatId, 'typing');
      return true;
    } catch (error) {
      console.error('‚ùå –ê–¥–º–∏–Ω —á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
      return false;
    }
  }
}

module.exports = NotificationService;