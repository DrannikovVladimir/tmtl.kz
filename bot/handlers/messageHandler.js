// bot/handlers/messageHandler.js

const analytics = require('../utils/analytics');

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–Ω—Ç–∞–∫—Ç—ã, —Ç–µ–∫—Å—Ç)
 * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {Object} msg - –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} services - –æ–±—ä–µ–∫—Ç —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏
 */
const handleMessage = async (bot, msg, services) => {
  const { notificationService } = services;
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const userName = msg.from.username || msg.from.first_name;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
  if (msg.contact) {
    await handleContact(bot, msg, notificationService);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  if (msg.text && !msg.text.startsWith('/')) {
    await handleTextMessage(bot, msg);
    return;
  }
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (–Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
 * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {Object} msg - –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} notificationService - —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
const handleContact = async (bot, msg, notificationService) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const userName = msg.from.username || msg.from.first_name;

  console.log(`üìû –ü–æ–ª—É—á–µ–Ω –∫–æ–Ω—Ç–∞–∫—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName}: ${msg.contact.phone_number}`);
  
  try {
    const callbackData = {
      userId,
      userName,
      firstName: msg.contact.first_name,
      lastName: msg.contact.last_name,
      phoneNumber: msg.contact.phone_number,
      requestedAt: new Date().toISOString()
    };

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É
    analytics.recordCallbackRequest(callbackData);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await notificationService.sendCallbackNotification(bot, callbackData);
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const confirmationMessage = `
‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.

üìû –ù–æ–º–µ—Ä: ${msg.contact.phone_number}
‚è∞ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (9:00-18:00).

üì≤ –ï—Å–ª–∏ —Å—Ä–æ—á–Ω–æ: +7 (707) 886 36 33
    `;
    
    await bot.sendMessage(chatId, confirmationMessage, {
      reply_markup: { remove_keyboard: true }
    });
    
    console.log(`‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è ${userName}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–≤–æ–Ω–æ–∫:', error);
    
    await bot.sendMessage(chatId, 
      `üòï –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é: +7 (707) 886 36 33`,
      {
        reply_markup: { remove_keyboard: true }
      }
    );
  }
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {Object} msg - –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
const handleTextMessage = async (bot, msg) => {
  const chatId = msg.chat.id;

  if (msg.text === '‚ùå –û—Ç–º–µ–Ω–∞') {
    await bot.sendMessage(chatId, 
      '–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!',
      {
        reply_markup: { remove_keyboard: true }
      }
    );
  } else {
    await bot.sendMessage(chatId, 
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.'
    );
  }
};

module.exports = {
  handleMessage,
  handleContact,
  handleTextMessage
};